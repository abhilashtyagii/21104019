const express = require('express');
const axios = require('axios');

const app = express();
const PORT = 9876;

let numbers = [];
const windowSize = 10;

const calculateAverage = nums => {
  const sum = nums.reduce((acc, curr) => acc + curr, 0);
  return sum / nums.length;
};

const fetchNumbers = async type => {
  try {
    const response = await axios.get(`http://20.244.56.144/test/${type}`);
    return response.data.numbers;
  } catch (error) {
    console.error('Error fetching numbers:', error.message);
    return [];
  }
};

const handleNumberRequest = async (req, res, next) => {
  const { numberId } = req.params;
  let type;
  
  switch (numberId) {
    case 'p':
      type = 'primes';
      break;
    case 'f':
      type = 'fibo';
      break;
    case 'e':
      type = 'even';
      break;
    case 'r':
      type = 'rand';
      break;
    default:
      return res.status(400).json({ error: 'Invalid number ID' });
  }
  
  const numbersFromServer = await fetchNumbers(type);
  const newNumbers = numbersFromServer.filter(num => !numbers.includes(num));
  
  numbers.unshift(...newNumbers);
  
  if (numbers.length > windowSize) {
    numbers = numbers.slice(0, windowSize);
  }
  
  let avg = null;
  if (numbers.length === windowSize) {
    avg = calculateAverage(numbers);
  }
  
  const response = {
    windowPrevState: [...numbers],
    windowCurrState: numbers.slice(0, windowSize),
    numbers: newNumbers,
    avg
  };
  
  res.json(response);
};

app.get('/numbers/:numberId', handleNumberRequest);

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

